# Generated by Django 4.2.7 on 2024-04-09 11:31

import uuid

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnswerChoice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer choice",
                "verbose_name_plural": "Answer choices",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.IntegerField()),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Context",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Context",
                "verbose_name_plural": "Contexts",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Explanation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Explanation",
                "verbose_name_plural": "Explanations",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.IntegerField()),
            ],
            options={
                "verbose_name": "Level",
                "verbose_name_plural": "Levels",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="label")),
                (
                    "path",
                    models.FilePathField(
                        max_length=200,
                        path=settings.MEDIA_DIR,
                        recursive=True,
                        recursive=True,
                    ),
                ),
                (
                    "m_type",
                    models.CharField(
                        choices=[
                            ("1", "Image"),
                            ("2", "Video"),
                            ("3", "Audio"),
                            ("4", "Document"),
                        ],
                        default="1",
                        max_length=1,
                        verbose_name="type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media",
                "verbose_name_plural": "Medias",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "q_type",
                    models.CharField(
                        choices=[
                            ("M", "Multiple Choice"),
                            ("S", "Single Choice"),
                            ("SO", "Single Option Choice"),
                            ("T", "Free text"),
                            ("MT", "Multiple Choice + Free Text"),
                            ("ST", "Single Choice + Free Text"),
                            ("CL", "Countries list"),
                            ("CA", "Categorisation"),
                            ("SR", "Sorting"),
                            ("LI", "Linking"),
                        ],
                        default="M",
                        max_length=2,
                        verbose_name="type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quiz",
                "verbose_name_plural": "Quizzes",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ResourceType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.PositiveIntegerField()),
            ],
            options={
                "verbose_name": "Resource Type",
                "verbose_name_plural": "Resource Types",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Text",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="label")),
                (
                    "t_type",
                    models.CharField(
                        choices=[
                            ("1", "Paragraph"),
                            ("2", "Title"),
                            ("3", "Hyperlink"),
                            ("4", "List"),
                        ],
                        default="1",
                        max_length=1,
                        verbose_name="type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Text",
                "verbose_name_plural": "Texts",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("current_position", models.PositiveSmallIntegerField(null=True)),
                ("created_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                (
                    "current_level",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.level",
                    ),
                ),
            ],
            options={
                "verbose_name": "Users",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="Score",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[django.core.validators.MaxValueValidator(100)],
                    ),
                ),
                (
                    "progress",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[django.core.validators.MaxValueValidator(100)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.level",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="elearning.user"
                    ),
                ),
            ],
            options={
                "verbose_name": "Score",
                "verbose_name_plural": "Scores",
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="elearning.level",
                    ),
                ),
                (
                    "resourceType",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="elearning.resourcetype",
                        verbose_name="type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource",
                "verbose_name_plural": "Resources",
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuizQuestion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.PositiveSmallIntegerField(default=0)),
                (
                    "display_quiz_label",
                    models.BooleanField(
                        default=True, verbose_name="Display label quiz?"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.question",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="elearning.quiz"
                    ),
                ),
            ],
            options={
                "verbose_name": "Quiz Question",
                "verbose_name_plural": "Quiz Questions",
            },
        ),
        migrations.AddField(
            model_name="quiz",
            name="questions",
            field=models.ManyToManyField(
                through="elearning.QuizQuestion", to="elearning.question"
            ),
        ),
        migrations.CreateModel(
            name="QuestionMediaTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("NA", "Not applicable"),
                            ("TL", "Top Left"),
                            ("TC", "Top Center"),
                            ("TR", "Top Right"),
                            ("ML", "Middle Left"),
                            ("MC", "Middle Center"),
                            ("MR", "Middle Right"),
                            ("BL", "Bottom Left"),
                            ("BC", "Bottom Center"),
                            ("BR", "Bottom Right "),
                        ],
                        default="NA",
                        max_length=2,
                    ),
                ),
                (
                    "css_classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.media",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media Template",
                "verbose_name_plural": "Media Templates",
            },
        ),
        migrations.CreateModel(
            name="QuestionAnswerChoice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.PositiveSmallIntegerField(default=0)),
                (
                    "is_correct",
                    models.BooleanField(
                        default=False, verbose_name="Is it the correct answer ?"
                    ),
                ),
                (
                    "answerChoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.answerchoice",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Answer Choice",
                "verbose_name_plural": "Question Answer Choices",
            },
        ),
        migrations.AddField(
            model_name="question",
            name="answer_choices",
            field=models.ManyToManyField(
                through="elearning.QuestionAnswerChoice", to="elearning.answerchoice"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="categories",
            field=models.ManyToManyField(
                blank=True, default=None, to="elearning.category"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="medias",
            field=models.ManyToManyField(
                through="elearning.QuestionMediaTemplate", to="elearning.media"
            ),
        ),
        migrations.CreateModel(
            name="Knowledge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "progress",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[django.core.validators.MaxValueValidator(100)],
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.category",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="elearning.user"
                    ),
                ),
            ],
            options={
                "verbose_name": "Knowledge",
                "verbose_name_plural": "Knowledge",
            },
        ),
        migrations.CreateModel(
            name="ExplanationTextTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("NA", "Not applicable"),
                            ("TL", "Top Left"),
                            ("TC", "Top Center"),
                            ("TR", "Top Right"),
                            ("ML", "Middle Left"),
                            ("MC", "Middle Center"),
                            ("MR", "Middle Right"),
                            ("BL", "Bottom Left"),
                            ("BC", "Bottom Center"),
                            ("BR", "Bottom Right "),
                        ],
                        default="NA",
                        max_length=2,
                    ),
                ),
                (
                    "css_classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "explanation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.explanation",
                    ),
                ),
                (
                    "text",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="elearning.text"
                    ),
                ),
            ],
            options={
                "verbose_name": "Text Template",
                "verbose_name_plural": "Text Templates",
            },
        ),
        migrations.CreateModel(
            name="ExplanationMediaTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("NA", "Not applicable"),
                            ("TL", "Top Left"),
                            ("TC", "Top Center"),
                            ("TR", "Top Right"),
                            ("ML", "Middle Left"),
                            ("MC", "Middle Center"),
                            ("MR", "Middle Right"),
                            ("BL", "Bottom Left"),
                            ("BC", "Bottom Center"),
                            ("BR", "Bottom Right "),
                        ],
                        default="NA",
                        max_length=2,
                    ),
                ),
                (
                    "css_classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "explanation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.explanation",
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.media",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media Template",
                "verbose_name_plural": "Media Templates",
            },
        ),
        migrations.AddField(
            model_name="explanation",
            name="medias",
            field=models.ManyToManyField(
                through="elearning.ExplanationMediaTemplate", to="elearning.media"
            ),
        ),
        migrations.AddField(
            model_name="explanation",
            name="question",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="elearning.question",
            ),
        ),
        migrations.AddField(
            model_name="explanation",
            name="texts",
            field=models.ManyToManyField(
                through="elearning.ExplanationTextTemplate", to="elearning.text"
            ),
        ),
        migrations.CreateModel(
            name="ContextTextTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.PositiveSmallIntegerField(default=0)),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("NA", "Not applicable"),
                            ("TL", "Top Left"),
                            ("TC", "Top Center"),
                            ("TR", "Top Right"),
                            ("ML", "Middle Left"),
                            ("MC", "Middle Center"),
                            ("MR", "Middle Right"),
                            ("BL", "Bottom Left"),
                            ("BC", "Bottom Center"),
                            ("BR", "Bottom Right "),
                        ],
                        default="NA",
                        max_length=2,
                    ),
                ),
                (
                    "css_classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "context",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.context",
                    ),
                ),
                (
                    "text",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="elearning.text"
                    ),
                ),
            ],
            options={
                "verbose_name": "Text Template",
                "verbose_name_plural": "Text Templates",
            },
        ),
        migrations.CreateModel(
            name="ContextResourceTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.PositiveSmallIntegerField(default=0)),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("NA", "Not applicable"),
                            ("TL", "Top Left"),
                            ("TC", "Top Center"),
                            ("TR", "Top Right"),
                            ("ML", "Middle Left"),
                            ("MC", "Middle Center"),
                            ("MR", "Middle Right"),
                            ("BL", "Bottom Left"),
                            ("BC", "Bottom Center"),
                            ("BR", "Bottom Right "),
                        ],
                        default="NA",
                        max_length=2,
                    ),
                ),
                (
                    "css_classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "context",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.context",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.resource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource Template",
                "verbose_name_plural": "Resource Templates",
            },
        ),
        migrations.CreateModel(
            name="ContextMediaTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("NA", "Not applicable"),
                            ("TL", "Top Left"),
                            ("TC", "Top Center"),
                            ("TR", "Top Right"),
                            ("ML", "Middle Left"),
                            ("MC", "Middle Center"),
                            ("MR", "Middle Right"),
                            ("BL", "Bottom Left"),
                            ("BC", "Bottom Center"),
                            ("BR", "Bottom Right "),
                        ],
                        default="NA",
                        max_length=2,
                    ),
                ),
                (
                    "css_classes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "context",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.context",
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.media",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media Template",
                "verbose_name_plural": "Media Templates",
            },
        ),
        migrations.AddField(
            model_name="context",
            name="medias",
            field=models.ManyToManyField(
                through="elearning.ContextMediaTemplate", to="elearning.media"
            ),
        ),
        migrations.AddField(
            model_name="context",
            name="resources",
            field=models.ManyToManyField(
                through="elearning.ContextResourceTemplate", to="elearning.resource"
            ),
        ),
        migrations.AddField(
            model_name="context",
            name="texts",
            field=models.ManyToManyField(
                through="elearning.ContextTextTemplate", to="elearning.text"
            ),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer_choices", models.ManyToManyField(to="elearning.answerchoice")),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.question",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="elearning.user"
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer",
                "verbose_name_plural": "Answers",
            },
        ),
        migrations.CreateModel(
            name="TextTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("hyperlink", models.TextField(blank=True, default=None, null=True)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.text",
                    ),
                ),
            ],
            options={
                "verbose_name": "Text Translation",
                "db_table": "elearning_text_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ResourceTypeTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.resourcetype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource Type Translation",
                "db_table": "elearning_resourcetype_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ResourceTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                (
                    "path",
                    models.FilePathField(
                        max_length=200,
                        path=settings.MEDIA_DIR,
                        recursive=True,
                        recursive=True,
                    ),
                ),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.resource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource Translation",
                "db_table": "elearning_resource_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuizTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.TextField(verbose_name="label")),
                ("tooltip", models.TextField(blank=True, default=None, null=True)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.quiz",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quiz Translation",
                "db_table": "elearning_quiz_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="QuestionTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.TextField(verbose_name="label")),
                ("tooltip", models.TextField(blank=True, default=None, null=True)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Translation",
                "db_table": "elearning_question_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="LevelTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="label")),
                ("description", models.TextField()),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.level",
                    ),
                ),
            ],
            options={
                "verbose_name": "Level Translation",
                "db_table": "elearning_level_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="LevelSequence",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.PositiveSmallIntegerField()),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="elearning.level",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="elearning_l_content_014797_idx",
                    )
                ],
                "unique_together": {("level", "position")},
            },
        ),
        migrations.CreateModel(
            name="ExplanationTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.TextField(verbose_name="Label")),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.explanation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Explanation Translation",
                "db_table": "elearning_explanation_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ContextTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.TextField(verbose_name="Title")),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.context",
                    ),
                ),
            ],
            options={
                "verbose_name": "Context Translation",
                "db_table": "elearning_context_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CategoryTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category Translation",
                "db_table": "elearning_category_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="AnswerChoiceTranslation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        db_index=True, max_length=15, verbose_name="Language"
                    ),
                ),
                ("name", models.TextField(verbose_name="label")),
                ("tooltip", models.TextField(blank=True, default=None, null=True)),
                (
                    "master",
                    parler.fields.TranslationsForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="elearning.answerchoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer choice Translation",
                "db_table": "elearning_answerchoice_translation",
                "db_tablespace": "",
                "managed": True,
                "default_permissions": (),
                "unique_together": {("language_code", "master")},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
